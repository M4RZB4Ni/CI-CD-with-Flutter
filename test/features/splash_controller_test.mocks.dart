// Mocks generated by Mockito 5.1.0 from annotations
// in wallpaper_application_assessment/test/features/splash_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:wallpaper_application_assessment/app/base/api_result.dart'
    as _i2;
import 'package:wallpaper_application_assessment/data/data_models/wallpapaers/request/get_wallpaper_request.dart'
    as _i6;
import 'package:wallpaper_application_assessment/data/data_models/wallpapaers/response/get_wallpaper_response.dart'
    as _i5;
import 'package:wallpaper_application_assessment/feature/splash/domain/repositories/splash_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeApiResult_0<T> extends _i1.Fake implements _i2.ApiResult<T> {}

/// A class which mocks [SplashRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSplashRepository extends _i1.Mock implements _i3.SplashRepository {
  MockSplashRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiResult<_i5.GetWallpapersResponse>> getWallpapers(
          {_i6.GetWallpapersRequest? getWallpapersRequest}) =>
      (super.noSuchMethod(
          Invocation.method(#getWallpapers, [],
              {#getWallpapersRequest: getWallpapersRequest}),
          returnValue: Future<_i2.ApiResult<_i5.GetWallpapersResponse>>.value(
              _FakeApiResult_0<_i5.GetWallpapersResponse>())) as _i4
          .Future<_i2.ApiResult<_i5.GetWallpapersResponse>>);
}
